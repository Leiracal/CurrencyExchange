@model CurrencyExchange.Models.Order

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Order</h4>
<hr />

<p>
    <img src="/Images/MarketVsLimit.png" alt="Image of apple stand demonstrating the difference between market and limit orders" style="float: right; margin: 5px;">
    If you specify a Price, your buy/sell order will be placed as a Limit Order, and will remain in the Order Book until matching counter-offers are made.
</p>
<p>
    If you leave Price blank, your order will be treated as a Market Order, and will be fulfilled immediately using all currently available counter-offers.
</p>


<div class="row">
    <div class="col-md-4">
        <form enctype="multipart/form-data" asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>

            <!--TODO: Type should be a drop-down for "Buy" and "Sell" (or radio buttons)-->
            @* Fixed! In Order Controller *@
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="OrderTypeID" class="form-control" asp-items="ViewBag.OrderTypeID"></select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <!--TODO: validate price to a whole number-->
            @* Fixed in Order Model using Range checker *@
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            @* Added range checker in Order model*@
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <!--TODO: Remaining should be handled in controller when adding order (= Quantity)-->
            @* Fixed in OrderController, commented out for reference *@
            @* <div class="form-group">
            <label asp-for="Remaining" class="control-label"></label>
            <input asp-for="Remaining" class="form-control" value="0" />
            <span asp-validation-for="Remaining" class="text-danger"></span>
            </div> *@
            <!--TODO: Status should be handled in controller when adding order (= Open)-->
            @* Fixed in OrderController, commented out for reference *@
            @* <div class="form-group">
            <label asp-for="Status" class="control-label"></label>
            <input asp-for="Status" class="form-control"/>
            <span asp-validation-for="Status" class="text-danger"></span>
            </div> *@
            <!--TODO: CreatedAt should be handled in controller when adding order (= now)-->
            @* Set by model on creation, commented out for reference *@
            @* <div class="form-group">
            <label asp-for="CreatedAt" class="control-label"></label>
            <input asp-for="CreatedAt" class="form-control" value="@DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss")" />
            <span asp-validation-for="CreatedAt" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
